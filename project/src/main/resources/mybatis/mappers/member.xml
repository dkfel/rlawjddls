<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
      PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<!-- 참고
		<![CDATA[ 쿼리문 ]]>
		쿼리문에 비교연산자(  > >= < <= )가 포함되어 있는 경우
		문자열로 취급하기위해서   <![CDATA[     ]]> 안에 쿼리문을 작성한다
 --> 
 
<!-- member테이블 관련 DML작업을 하는 쿼리문 --> 
<mapper namespace="member">

	<!-- 회원가입처리 
		실행하는 쿼리문에 파라미터가 2개이상이면 DTO로 parameterType을 지정한다
		실행하는 쿼리문에 파라미터가 1개이면      기본형(primitive type)로 parameterType을 지정한다
	-->
	<insert id="joinMember"  parameterType="memberDTO">
		insert into member(email, password, name, phone, address, member_role, member_status)
		values(#{email}, #{password}, #{name}, #{phone}, #{address}, 'user', 'active')
	</insert>

	<!-- 회원목록조회 
			 다양한 type의  data의 개수가 여러개   => collection, DTO이용
	-->
	<select id="getMemberList" resultType="memberDTO">
		<![CDATA[ 
			SELECT 	* 
			FROM 		MEMBER
		]]>
	</select>

	<select id="getMemberDetail" resultType="memberDTO">
		<![CDATA[ 
			SELECT 	member_id,email,password,name,phone,address,member_role,member_status 
			FROM 		MEMBER
			WHERE		email=#{email}
		]]>
	</select>
	
		<select id="updateMember" resultType="memberDTO">
		<![CDATA[ 
			UPDATE 	MEMBER
			SET			password  = #{password},
						phone=#{phone},
						address=#{address}
			WHERE		email	 = #{email}
		]]>
	</select>
	
	<select id="deleteMember" resultType="memberDTO">
		<![CDATA[ 
			UPDATE 	MEMBER
			SET			member_status = 'deleted'
			WHERE		email	   = #{email}
		]]>
	</select>
	
	<select id="checkDuplicateByEmail" resultType="integer">
		<![CDATA[ 
			select count(*) 
			from member 
			where email = #{email}
		]]>
	</select>
	
	<select id="login" parameterType="hashmap" resultType="memberDTO">
		SELECT	member_id,email,password,name,phone,address,member_role,member_status
		FROM		MEMBER
		WHERE		email=#{email} AND password=#{password}
	</select>
	
</mapper> 



  